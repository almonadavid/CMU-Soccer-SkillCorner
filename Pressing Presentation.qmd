---
title: "Expected Pressure: An Evaluation of Individual and Team Performances in Pressing Situations"
author: "Natalie Rayce, David Almona"
format:
  revealjs:
    slide-number: true
    chalkboard: true
editor: visual
---


## Introduction

**Pressing** is a defensive tactic where players apply coordinated pressure on the opponent with the ball to force mistakes, win back possession, and quickly transition to attack

**Defensive Player Positioning** is an important aspect of press, affecting the effectiveness of the press in disrupting the opponent’s play and create scoring chances

**Attacking player positioning** influences passing options and movement potential, alters the effectiveness of a defensive press, and affects the likelihood of successfully breaking that press


## Data
- **Dataset:** 
521 matches in the MLS 2023 season

- **Three data modalities:**
  - Match information: home team, away team, pitch and referee information, ect. 
  - Event data: on‑ball and off-ball activities—ex: passes, shots, tackles, recoveries, runs , turnovers , and goals—along with timestamp, location coordinates and player name
  - Tracking data: identity, location and movement of all 22 players and the ball, across the full 90 minutes.

- **Official data** from SkillCorner, which uses computer vision and machine learning to extract data from video broadcast



## Methods


## Analysis
## Results
## Discussion
## Plan of Action



## This is a map of the US



## Bullet points

-   First Bullet
    -   First Sub-bullet
    -   Second Sub-bullet
-   Second Bullet
-   Third Bullet

## Code Chunk

```{r}
#| echo: true
#| eval: false
rnorm(1)
```

## Numbered lists

1.  

2.  

3.  

## Quarto callouts

test

## Quarto

Quarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see <https://quarto.org/docs/presentations/>.

## Bullets

When you click the **Render** button a document will be generated that includes:

-   Content authored with markdown
-   Output from executable code

## Code

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```
